// Copyright (c) 2025 Michael Ivertowski
// Licensed under the MIT License. See LICENSE file in the project root for license information.

using DotCompute.Algorithms.Security.Vulnerabilities;

namespace DotCompute.Algorithms.Security.Reports;

/// <summary>
/// Internal data structure representing a comprehensive vulnerability report for a package.
/// Used for caching and intermediate processing of vulnerability scan results.
/// </summary>
internal sealed class VulnerabilityReport
{
    /// <summary>
    /// Gets or sets the package identifier for this report.
    /// Identifies which package this vulnerability report covers.
    /// </summary>
    /// <value>The package identifier as a string.</value>
    public required string PackageId { get; set; }

    /// <summary>
    /// Gets or sets the package version for this report.
    /// Identifies the specific version of the package that was scanned.
    /// </summary>
    /// <value>The package version as a string.</value>
    public required string PackageVersion { get; set; }

    /// <summary>
    /// Gets or sets the timestamp when this scan was performed.
    /// Used for cache validation and determining data freshness.
    /// </summary>
    /// <value>The scan time as a DateTime.</value>
    public DateTime ScanTime { get; set; }

    /// <summary>
    /// Gets or sets the complete list of vulnerabilities found for this package.
    /// Contains all security issues identified across all vulnerability sources.
    /// </summary>
    /// <value>A list of package vulnerability objects.</value>
    public List<PackageVulnerability> Vulnerabilities { get; set; } = [];

    /// <summary>
    /// Gets or sets the list of vulnerability sources that were consulted.
    /// Tracks which databases and services contributed to this report.
    /// </summary>
    /// <value>A list of vulnerability source names.</value>
    public List<string> Sources { get; set; } = [];
}