
// Copyright (c) 2025 Michael Ivertowski
// Licensed under the MIT License. See LICENSE file in the project root for license information.

namespace DotCompute.Algorithms.Security.Options;

/// <summary>
/// Configuration options for the vulnerability scanner.
/// Controls scanning behavior, API endpoints, authentication, and performance settings.
/// </summary>
public sealed class VulnerabilityScannerOptions
{
    /// <summary>
    /// Gets or sets whether National Vulnerability Database (NVD) scanning is enabled.
    /// When enabled, the scanner will query the NVD API for vulnerability information.
    /// Default value is true.
    /// </summary>
    /// <value>true if NVD scanning is enabled; otherwise, false.</value>
    public bool EnableNvdScanning { get; set; } = true;

    /// <summary>
    /// Gets or sets the API key for accessing the National Vulnerability Database.
    /// Required for making authenticated requests to the NVD API.
    /// Obtain from: https://nvd.nist.gov/developers/request-an-api-key
    /// </summary>
    /// <value>The NVD API key as a string, or null if not configured.</value>
    public string? NvdApiKey { get; set; }

    /// <summary>
    /// Gets or sets the base URL for the National Vulnerability Database API.
    /// Default value is the official NVD REST API endpoint.
    /// </summary>
    /// <value>The NVD base URL.</value>
    public Uri NvdBaseUrl { get; set; } = new Uri("https://services.nvd.nist.gov/rest/json");

    /// <summary>
    /// Gets or sets whether GitHub Security Advisory scanning is enabled.
    /// When enabled, the scanner will query GitHub's security advisory database.
    /// Default value is true.
    /// </summary>
    /// <value>true if GitHub Advisory scanning is enabled; otherwise, false.</value>
    public bool EnableGitHubScanning { get; set; } = true;

    /// <summary>
    /// Gets or sets the GitHub personal access token for API authentication.
    /// Required for accessing GitHub's Security Advisory API.
    /// Generate at: https://github.com/settings/tokens
    /// </summary>
    /// <value>The GitHub token as a string, or null if not configured.</value>
    public string? GitHubToken { get; set; }

    /// <summary>
    /// Gets or sets the base URL for the GitHub API.
    /// Default value is the official GitHub API endpoint.
    /// </summary>
    /// <value>The GitHub API base URL.</value>
    public Uri GitHubApiBaseUrl { get; set; } = new Uri("https://api.github.com");

    /// <summary>
    /// Gets or sets whether Sonatype OSS Index scanning is enabled.
    /// When enabled, the scanner will query the OSS Index for vulnerability information.
    /// Default value is true.
    /// </summary>
    /// <value>true if OSS Index scanning is enabled; otherwise, false.</value>
    public bool EnableOssIndexScanning { get; set; } = true;

    /// <summary>
    /// Gets or sets the base URL for the Sonatype OSS Index API.
    /// Default value is the official OSS Index API endpoint.
    /// </summary>
    /// <value>The OSS Index base URL.</value>
    public Uri OssIndexBaseUrl { get; set; } = new Uri("https://ossindex.sonatype.org/api/v3");

    /// <summary>
    /// Gets or sets the username for OSS Index authentication.
    /// Optional for basic usage, required for higher rate limits.
    /// </summary>
    /// <value>The OSS Index username as a string, or null if not configured.</value>
    public string? OssIndexUsername { get; set; }

    /// <summary>
    /// Gets or sets the token for OSS Index authentication.
    /// Optional for basic usage, required for higher rate limits.
    /// </summary>
    /// <value>The OSS Index token as a string, or null if not configured.</value>
    public string? OssIndexToken { get; set; }

    /// <summary>
    /// Gets or sets the file path to a local vulnerability database.
    /// When specified, the scanner will load and search this local database.
    /// Useful for offline scanning or custom vulnerability data.
    /// </summary>
    /// <value>The local database file path as a string, or null if not configured.</value>
    public string? LocalDatabasePath { get; set; }

    /// <summary>
    /// Gets or sets the timeout for individual vulnerability scan operations.
    /// Controls how long to wait for API responses before timing out.
    /// Default value is 2 minutes.
    /// </summary>
    /// <value>The scan timeout as a TimeSpan.</value>
    public TimeSpan ScanTimeout { get; set; } = TimeSpan.FromMinutes(2);

    /// <summary>
    /// Gets or sets the maximum number of concurrent scan operations.
    /// Controls resource usage and prevents overwhelming external APIs.
    /// Default value is 5 concurrent scans.
    /// </summary>
    /// <value>The maximum concurrent scan count as an integer.</value>
    public int MaxConcurrentScans { get; set; } = 5;

    /// <summary>
    /// Gets or sets the cache expiration time for vulnerability scan results.
    /// Cached results older than this duration will be considered stale.
    /// Default value is 6 hours.
    /// </summary>
    /// <value>The cache expiration time as a TimeSpan.</value>
    public TimeSpan CacheExpiration { get; set; } = TimeSpan.FromHours(6);
}