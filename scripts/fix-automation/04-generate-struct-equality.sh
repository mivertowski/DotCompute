#!/bin/bash
# Fix CA1815: Generate struct equality members

set -e

echo "=========================================="
echo "Fixing CA1815: Struct Equality"
echo "=========================================="

# This script generates a list of structs needing equality
# Manual review recommended due to complexity

TARGET_DIR="src"
OUTPUT_FILE="docs/struct-equality-todo.md"

echo "Scanning for structs without equality..."

cat > "$OUTPUT_FILE" << 'HEADER'
# Structs Requiring Equality Implementation

Generated by: scripts/fix-automation/04-generate-struct-equality.sh

## Instructions

For each struct below, add the following members:

```csharp
public readonly struct YourStruct : IEquatable<YourStruct>
{
    // Existing fields/properties...

    public override bool Equals(object? obj) => obj is YourStruct other && Equals(other);

    public bool Equals(YourStruct other) =>
        Field1 == other.Field1 &&
        Field2 == other.Field2;  // Add all fields

    public override int GetHashCode() => HashCode.Combine(Field1, Field2);

    public static bool operator ==(YourStruct left, YourStruct right) => left.Equals(right);
    public static bool operator !=(YourStruct left, YourStruct right) => !left.Equals(right);
}
```

## Structs to Fix

HEADER

# Find structs without Equals override
find "$TARGET_DIR" -name "*.cs" -type f | while read -r file; do
    # Extract struct definitions and check for Equals
    awk '
        /^\s*public.*struct\s+\w+/ {
            in_struct = 1
            struct_name = $0
            struct_file = FILENAME
            has_equals = 0
        }
        in_struct && /override.*Equals/ {
            has_equals = 1
        }
        in_struct && /^}/ {
            if (!has_equals) {
                print "### File: " struct_file
                print "```csharp"
                print struct_name
                print "```"
                print ""
                count++
            }
            in_struct = 0
        }
        END {
            if (count > 0) {
                print "Total structs in this file: " count
            }
        }
    ' "$file" >> "$OUTPUT_FILE"
done

echo ""
echo "=========================================="
echo "Analysis Complete!"
echo "=========================================="
echo ""
echo "Report generated: $OUTPUT_FILE"
echo ""
echo "Next steps:"
echo "1. Review the report"
echo "2. Use IDE snippet 'struceq' for each struct"
echo "3. Or use code generator (see docs/code-generators/)"
echo ""
echo "Estimated time: 2-3 days for 1,686 structs"
echo "Consider writing a Roslyn code fix provider!"
