#nullable enable

// Copyright (c) 2025 Michael Ivertowski
// Licensed under the MIT License. See LICENSE file in the project root for license information.

using DotCompute.Algorithms.Security.Vulnerabilities;

namespace DotCompute.Algorithms.Security.Results;

/// <summary>
/// Result of a comprehensive vulnerability scan operation.
/// Contains detailed information about discovered vulnerabilities, risk analysis, and scan metadata.
/// </summary>
public sealed class VulnerabilityScanResult
{
    /// <summary>
    /// Gets or sets the package identifier that was scanned.
    /// </summary>
    public required string PackageId { get; set; }

    /// <summary>
    /// Gets or sets the package version that was scanned.
    /// </summary>
    public required string PackageVersion { get; set; }

    /// <summary>
    /// Gets or sets the timestamp when the scan was performed.
    /// </summary>
    public DateTime ScanTime { get; set; }

    /// <summary>
    /// Gets or sets a value indicating whether the result was retrieved from cache.
    /// </summary>
    public bool FromCache { get; set; }

    /// <summary>
    /// Gets or sets a value indicating whether the package has known vulnerabilities.
    /// </summary>
    public bool HasVulnerabilities { get; set; }

    /// <summary>
    /// Gets or sets the list of discovered vulnerabilities.
    /// </summary>
    public IList<PackageVulnerability> Vulnerabilities { get; init; } = [];

    /// <summary>
    /// Gets or sets the total number of vulnerabilities found.
    /// </summary>
    public int VulnerabilityCount { get; set; }

    /// <summary>
    /// Gets or sets the number of critical severity vulnerabilities.
    /// </summary>
    public int CriticalCount { get; set; }

    /// <summary>
    /// Gets or sets the number of high severity vulnerabilities.
    /// </summary>
    public int HighCount { get; set; }

    /// <summary>
    /// Gets or sets the number of medium severity vulnerabilities.
    /// </summary>
    public int MediumCount { get; set; }

    /// <summary>
    /// Gets or sets the number of low severity vulnerabilities.
    /// </summary>
    public int LowCount { get; set; }

    /// <summary>
    /// Gets or sets the calculated risk score based on vulnerability severities.
    /// Higher scores indicate greater security risk.
    /// </summary>
    public int RiskScore { get; set; }

    /// <summary>
    /// Gets or sets the list of vulnerability sources that were queried during the scan.
    /// </summary>
    public IList<string> Sources { get; init; } = [];
}