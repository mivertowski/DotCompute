name: Nightly Build

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  CI: true

jobs:
  nightly-build:
    name: Nightly Build & Extended Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: üîß Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          9.0.x
        dotnet-quality: preview
    
    - name: üì• Restore dependencies
      run: dotnet restore
    
    - name: üèóÔ∏è Build (All Configurations)
      run: |
        for config in Debug Release; do
          echo "Building $config configuration..."
          dotnet build \
            --configuration $config \
            --no-restore \
            /p:TreatWarningsAsErrors=false \
            /p:EnforceCodeStyleInBuild=false \
            /p:ContinuousIntegrationBuild=true
        done
    
    - name: üß™ Run All Tests (Including Long Running)
      run: |
        dotnet test \
          --configuration Release \
          --no-build \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults \
          --logger "trx;LogFileName=nightly-tests.trx" \
          --logger "console;verbosity=detailed" \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura
      timeout-minutes: 60
      continue-on-error: true
    
    - name: üî¨ Run Stress Tests
      run: |
        dotnet test \
          --configuration Release \
          --no-build \
          --filter "Category=Stress|Category=Performance" \
          --logger "trx;LogFileName=stress-tests.trx"
      timeout-minutes: 30
      continue-on-error: true
    
    - name: üßπ Run Code Analysis
      run: |
        dotnet build \
          --configuration Release \
          --no-restore \
          /p:RunAnalyzersDuringBuild=true \
          /p:RunAnalyzers=true \
          /p:TreatWarningsAsErrors=false \
          /p:WarningsAsErrors="" \
          /p:CodeAnalysisTreatWarningsAsErrors=false
      continue-on-error: true
    
    - name: üìä Generate Detailed Coverage Report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool || true
        reportgenerator \
          -reports:./TestResults/**/coverage.cobertura.xml \
          -targetdir:./NightlyCoverage \
          -reporttypes:"Html;Cobertura;MarkdownSummary;TextSummary;Badges;SonarQube" \
          -historydir:./coverage-history \
          -assemblyfilters:"+DotCompute*" \
          -verbosity:Info
    
    - name: üì§ Upload Nightly Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nightly-build-${{ github.run_number }}
        path: |
          ./TestResults/**
          ./NightlyCoverage/**
        retention-days: 7
    
    - name: üìß Send Notification (on failure)
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Nightly Build Failed - ${new Date().toISOString().split('T')[0]}`,
            body: `The nightly build failed. Check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`,
            labels: ['ci-failure', 'nightly-build']
          });
      continue-on-error: true