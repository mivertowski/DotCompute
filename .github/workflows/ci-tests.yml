name: CI Tests (No Hardware Dependencies)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  ci-tests:
    name: CI Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: ['9.0.x']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Run CI tests (no hardware dependencies)
      run: |
        dotnet test --configuration Release \
          --settings tests/ci-test.runsettings \
          --logger "trx;LogFileName=ci-test-results.trx" \
          --logger "console;verbosity=normal" \
          --collect:"XPlat Code Coverage" \
          --results-directory TestResults/CI \
          --verbosity normal
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.dotnet-version }}
        path: TestResults/CI/
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success()
      with:
        directory: TestResults/CI/
        flags: unittests
        name: codecov-umbrella
        
    - name: Generate coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:"TestResults/CI/**/*.xml" -targetdir:"coverage-report" -reporttypes:Html
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: coverage-report-${{ matrix.dotnet-version }}
        path: coverage-report/

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: ci-tests
    if: always()
    
    steps:
    - name: Download test results
      uses: actions/download-artifact@v3
      with:
        pattern: test-results-*
        
    - name: Display test summary
      run: |
        echo "## CI Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Test Categories Included:**" >> $GITHUB_STEP_SUMMARY
        echo "- Mock/Simulation tests" >> $GITHUB_STEP_SUMMARY
        echo "- Unit tests" >> $GITHUB_STEP_SUMMARY
        echo "- Integration tests (non-hardware)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "❌ **Test Categories Excluded:**" >> $GITHUB_STEP_SUMMARY
        echo "- HardwareRequired (CUDA, OpenCL, DirectCompute)" >> $GITHUB_STEP_SUMMARY
        echo "- Performance benchmarks requiring GPU" >> $GITHUB_STEP_SUMMARY
        echo "- RTX2000-specific validation tests" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "💡 **Note:** Hardware-dependent tests are excluded in CI environments." >> $GITHUB_STEP_SUMMARY
        echo "Run locally with \`./scripts/run-hardware-tests.sh\` to test with actual hardware." >> $GITHUB_STEP_SUMMARY