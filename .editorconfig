# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

# All files
[*]
charset = utf-8
insert_final_newline = true
trim_trailing_whitespace = true
indent_style = space

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
end_of_line = crlf

# C# files
[*.cs]

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
csharp_using_directive_placement = outside_namespace:error

# Code style rules
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error
dotnet_style_require_accessibility_modifiers = always:error
dotnet_style_readonly_field = true:warning
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_inlined_variable_declaration = true:warning
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:warning
csharp_prefer_braces = true:warning
csharp_prefer_simple_default_expression = true:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:warning
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion
csharp_style_prefer_method_group_conversion = true:suggestion
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_prefer_top_level_statements = false:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = false:error
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:error
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = false:error
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = false:error
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:error

# Naming rules
dotnet_naming_rule.interface_rule.severity = error
dotnet_naming_rule.interface_rule.symbols = interface_symbols
dotnet_naming_rule.interface_rule.style = interface_style

dotnet_naming_symbols.interface_symbols.applicable_kinds = interface
dotnet_naming_symbols.interface_symbols.applicable_accessibilities = *

dotnet_naming_style.interface_style.required_prefix = I
dotnet_naming_style.interface_style.capitalization = pascal_case

dotnet_naming_rule.type_rule.severity = error
dotnet_naming_rule.type_rule.symbols = type_symbols
dotnet_naming_rule.type_rule.style = type_style

dotnet_naming_symbols.type_symbols.applicable_kinds = class,struct,interface,enum,delegate
dotnet_naming_symbols.type_symbols.applicable_accessibilities = *

dotnet_naming_style.type_style.capitalization = pascal_case

dotnet_naming_rule.member_rule.severity = error
dotnet_naming_rule.member_rule.symbols = member_symbols
dotnet_naming_rule.member_rule.style = member_style

dotnet_naming_symbols.member_symbols.applicable_kinds = property,method,field,event
dotnet_naming_symbols.member_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected

dotnet_naming_style.member_style.capitalization = pascal_case

dotnet_naming_rule.private_field_rule.severity = error
dotnet_naming_rule.private_field_rule.symbols = private_field_symbols
dotnet_naming_rule.private_field_rule.style = private_field_style

dotnet_naming_symbols.private_field_symbols.applicable_kinds = field
dotnet_naming_symbols.private_field_symbols.applicable_accessibilities = private

dotnet_naming_style.private_field_style.required_prefix = _
dotnet_naming_style.private_field_style.capitalization = camel_case

dotnet_naming_rule.parameter_rule.severity = error
dotnet_naming_rule.parameter_rule.symbols = parameter_symbols
dotnet_naming_rule.parameter_rule.style = parameter_style

dotnet_naming_symbols.parameter_symbols.applicable_kinds = parameter,local
dotnet_naming_symbols.parameter_symbols.applicable_accessibilities = *

dotnet_naming_style.parameter_style.capitalization = camel_case

dotnet_naming_rule.const_rule.severity = error
dotnet_naming_rule.const_rule.symbols = const_symbols
dotnet_naming_rule.const_rule.style = const_style

dotnet_naming_symbols.const_symbols.applicable_kinds = field
dotnet_naming_symbols.const_symbols.applicable_accessibilities = *
dotnet_naming_symbols.const_symbols.required_modifiers = const

dotnet_naming_style.const_style.capitalization = pascal_case

# Analyzers
dotnet_analyzer_diagnostic.category-performance.severity = warning
dotnet_analyzer_diagnostic.category-reliability.severity = warning
dotnet_analyzer_diagnostic.category-security.severity = error

# Specific analyzer rules
dotnet_diagnostic.CA1031.severity = none # Do not catch general exception types
dotnet_diagnostic.CA1303.severity = none # Do not pass literals as localized parameters
dotnet_diagnostic.CA1062.severity = none # Validate arguments of public methods
dotnet_diagnostic.CA2007.severity = none # Do not directly await a Task

# Downgrade CA errors to warnings for test projects (to be fixed incrementally)
dotnet_diagnostic.CA1002.severity = warning # Change List<T> to Collection<T>
dotnet_diagnostic.CA1024.severity = warning # Use properties where appropriate
dotnet_diagnostic.CA1034.severity = warning # Do not nest types
dotnet_diagnostic.CA1051.severity = warning # Do not declare visible instance fields
dotnet_diagnostic.CA1305.severity = warning # Specify IFormatProvider
dotnet_diagnostic.CA1307.severity = warning # Specify StringComparison for clarity
dotnet_diagnostic.CA1308.severity = warning # Normalize strings to uppercase
dotnet_diagnostic.CA1310.severity = warning # Specify StringComparison for correctness
dotnet_diagnostic.CA1708.severity = warning # Identifiers should differ by more than case
dotnet_diagnostic.CA1711.severity = warning # Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1720.severity = warning # Identifier contains type name
dotnet_diagnostic.CA1814.severity = warning # Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1861.severity = warning # Prefer static readonly fields over constant arrays

# XML documentation
[*.{cs,vb}]
# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = suggestion

# JSON files
[*.json]
indent_size = 2

# XML files
[*.xml]
indent_size = 2

# YAML files
[*.{yml,yaml}]
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf

# Batch files
[*.{cmd,bat}]
end_of_line = crlf

# Markdown files
[*.md]
trim_trailing_whitespace = false

# Project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# Solution files
[*.sln]
indent_style = tab

# Native P/Invoke Interop Files - Suppress naming conventions for native API compatibility
[**/Types/Native/**.cs]
# CA1707: Identifiers should not contain underscores (native APIs use underscores)
dotnet_diagnostic.CA1707.severity = none
# CA1720: Identifier contains type name (ptr, handle, etc. are standard in P/Invoke)
dotnet_diagnostic.CA1720.severity = none
# CA1711: Identifiers should not have incorrect suffix (Stream, Flags are native naming)
dotnet_diagnostic.CA1711.severity = none
# CA1051: Public instance fields required for P/Invoke marshaling
dotnet_diagnostic.CA1051.severity = none
# CA1028: Enum storage should be Int32 (native enums need specific backing types)
dotnet_diagnostic.CA1028.severity = none
# CA1008: Enums should have zero value (native enums match C/C++ definitions)
dotnet_diagnostic.CA1008.severity = none
# CA1700: Do not name enum values 'Reserved' (native APIs use Reserved)
dotnet_diagnostic.CA1700.severity = none
# CA1815: Equals and operator overloads (P/Invoke structs rarely need comparison)
dotnet_diagnostic.CA1815.severity = none
# CA1027: Enums don't need [Flags] (sequential IDs, not bitwise flags)
dotnet_diagnostic.CA1027.severity = none

[**/Monitoring/NvmlWrapper.cs]
dotnet_diagnostic.CA1707.severity = none
dotnet_diagnostic.CA1720.severity = none
dotnet_diagnostic.CA1711.severity = none
dotnet_diagnostic.CA1028.severity = none
dotnet_diagnostic.CA1815.severity = none

[**/Monitoring/CuptiWrapper.cs]
dotnet_diagnostic.CA1707.severity = none
dotnet_diagnostic.CA1720.severity = none
dotnet_diagnostic.CA1711.severity = none
dotnet_diagnostic.CA1028.severity = none
dotnet_diagnostic.CA1815.severity = none

[**/Profiling/**.cs]
dotnet_diagnostic.CA1707.severity = none
dotnet_diagnostic.CA1720.severity = none
dotnet_diagnostic.CA1815.severity = none

# CUDA Backend - Native API terminology (data types, Flags, Stream suffixes are standard)
# CA1708: P/Invoke structs legitimately have both native fields (PciDeviceID) and C# wrappers (PciDeviceId)
[**/DotCompute.Backends.CUDA/**.cs]
dotnet_diagnostic.CA1720.severity = none
dotnet_diagnostic.CA1711.severity = none
dotnet_diagnostic.CA1708.severity = none

# Metal Backend - Native API terminology (Flags, Stream suffixes are standard)
[**/DotCompute.Backends.Metal/**.cs]
dotnet_diagnostic.CA1711.severity = none